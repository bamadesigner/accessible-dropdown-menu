/* TODO: did we end using any mixins? */
@import "./.mixins.pcss";

@design-tokens url("./tokens.json") format('style-dictionary3');

.acc-menu {
	display: flex;
	align-items: design-token("horizontal.base.align-items");
	gap: design-token("horizontal.base.gap");
	margin: design-token("horizontal.base.margin");
	padding: design-token("horizontal.base.padding");

	li {
		list-style: none;
		margin: design-token("horizontal.item.margin");
		padding: design-token("horizontal.item.padding");
	}

	/* Children submenus */
	ul {
		display: none;
		margin: design-token("horizontal.submenu.margin");
		padding: design-token("horizontal.submenu.padding");
	}

	/* Span around the root level text/link and the button */
	.acc-menu__main {
		display: flex;
		align-items: design-token("horizontal.main.align-items");
		justify-content: design-token("horizontal.main.justify-content");
		gap: design-token("horizontal.main.gap");
	}

	.acc-menu__button {
		display: none;
		appearance: none;
		align-items: design-token("horizontal.button.align-items");
		justify-content: design-token("horizontal.button.justify-content");
		background-color: design-token("horizontal.button.background.color");
		border: design-token("horizontal.button.border");
		border-radius: design-token("horizontal.button.border-radius");
		padding: design-token("horizontal.button.padding");
		min-width: design-token("horizontal.button.min-width");
		min-height: design-token("horizontal.button.min-height");
		transition: design-token("horizontal.button.transition");
		cursor: pointer;

		.acc-menu__button__icon {
			&:before {
				content: "";
				display: design-token("horizontal.button.icon.display");
				border-style: design-token("horizontal.button.icon.border-style");
				border-width: design-token("horizontal.button.icon.border-width");
				border-color: design-token("horizontal.button.icon.border-color");
				width: design-token("horizontal.button.icon.width");
				height: design-token("horizontal.button.icon.height");
				transform: design-token("horizontal.button.icon.transform");
				margin: 0 0 calc(design-token("horizontal.button.icon.height") / 2);
			}
		}

		&:focus {
			background-color: design-token("horizontal.button.focus.background.color");
			color: design-token("horizontal.button.focus.color");
		}
		&:hover {
			background-color: design-token("horizontal.button.hover.background.color");
			color: design-token("horizontal.button.hover.color");
		}
		&[aria-expanded="true"] {
			background-color: design-token("horizontal.button.expanded.background.color");
			color: design-token("horizontal.button.expanded.color");
		}
	}

	/* Any menu items with children */
	li.acc-menu__item--children {
		position: relative;

		/* Second level submenu */
		& > ul {
			position: absolute;
			left: 100%;
			top: 0;
			min-width: 100%;
		}

		&:hover > ul,
		&.acc-menu__item--expanded > ul {
			display: block;
		}

		/* Keeping visible if no JS so keyboard can tab through */
		&:not(.acc-menu__item--active) {
			&:focus-within > ul {
				display: block;
			}
		}
		&.acc-menu__item--active {
			/* Display button if activated */
			.acc-menu__button {
				display: flex;
			}
		}
	}

	/* First level items with children */
	& > li.acc-menu__item--children {
		/* Second level submenu */
		& > ul {
			left: 0;
			top: 100%;
		}
	}
}
